{"ast":null,"code":"var _jsxFileName = \"/home/enock/Development/code/scandiweb-junior-dev-test/client/src/components/ProductList/ProductList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ProductCard from '../ProductCard/ProductCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductList = () => {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [selectedProducts, setSelectedProducts] = useState([]);\n  useEffect(() => {\n    // Fetch products from the API endpoint\n    fetchProducts();\n  }, []);\n  const fetchProducts = async () => {\n    try {\n      const response = await fetch('https://enock-scandiweb-api.idealcis.com');\n      const data = await response.json();\n      setProducts(data);\n    } catch (error) {\n      console.error('Error fetching products:', error);\n    }\n  };\n  const handleCheckboxChange = productId => {\n    setSelectedProducts(prevSelected => {\n      if (prevSelected.includes(productId)) {\n        return prevSelected.filter(id => id !== productId);\n      } else {\n        return [...prevSelected, productId];\n      }\n    });\n  };\n  const handleMassDelete = async () => {\n    try {\n      // Delete the selected products using the API endpoint\n      for (const productId of selectedProducts) {\n        await fetch(`https://enock-scandiweb-api.idealcis.com/${productId}`, {\n          method: 'DELETE'\n        });\n        console.log('Deleting product with ID:', productId);\n      }\n      // Refresh the product list after successful deletion\n      fetchProducts();\n      // Clear the selectedProducts state\n      setSelectedProducts([]);\n    } catch (error) {\n      console.error('Error deleting products:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: products.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-3\",\n        children: /*#__PURE__*/_jsxDEV(ProductCard, {\n          product: product,\n          isSelected: selectedProducts.includes(product.id),\n          onCheckboxChange: () => handleCheckboxChange(product.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)\n      }, product.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-danger\",\n      onClick: handleMassDelete,\n      children: \"MASS DELETE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductList, \"FUDC/wB404N2lXCy5m2ElKMz7GM=\");\n_c = ProductList;\nexport default ProductList;\nvar _c;\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"names":["React","useState","useEffect","ProductCard","jsxDEV","_jsxDEV","ProductList","_s","products","setProducts","selectedProducts","setSelectedProducts","fetchProducts","response","fetch","data","json","error","console","handleCheckboxChange","productId","prevSelected","includes","filter","id","handleMassDelete","method","log","className","children","map","product","isSelected","onCheckboxChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/enock/Development/code/scandiweb-junior-dev-test/client/src/components/ProductList/ProductList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ProductCard from '../ProductCard/ProductCard';\n\nconst ProductList = () => {\n  const [products, setProducts] = useState([]);\n  const [selectedProducts, setSelectedProducts] = useState([]);\n\n  useEffect(() => {\n    // Fetch products from the API endpoint\n    fetchProducts();\n  }, []);\n\n  const fetchProducts = async () => {\n    try {\n      const response = await fetch('https://enock-scandiweb-api.idealcis.com');\n      const data = await response.json();\n      setProducts(data);\n    } catch (error) {\n      console.error('Error fetching products:', error);\n    }\n  };\n\n  const handleCheckboxChange = (productId) => {\n    setSelectedProducts((prevSelected) => {\n      if (prevSelected.includes(productId)) {\n        return prevSelected.filter((id) => id !== productId);\n      } else {\n        return [...prevSelected, productId];\n      }\n    });\n  };\n\n  const handleMassDelete = async () => {\n    try {\n      // Delete the selected products using the API endpoint\n      for (const productId of selectedProducts) {\n        await fetch(`https://enock-scandiweb-api.idealcis.com/${productId}`, {\n          method: 'DELETE',\n        });\n        console.log('Deleting product with ID:', productId);\n      }\n      // Refresh the product list after successful deletion\n      fetchProducts();\n      // Clear the selectedProducts state\n      setSelectedProducts([]);\n    } catch (error) {\n      console.error('Error deleting products:', error);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        {products.map((product) => (\n          <div className=\"col-md-3\" key={product.id}>\n            <ProductCard\n              product={product}\n              isSelected={selectedProducts.includes(product.id)}\n              onCheckboxChange={() => handleCheckboxChange(product.id)}\n            />\n          </div>\n        ))}\n      </div>\n      <button className=\"btn btn-danger\" onClick={handleMassDelete}>\n        MASS DELETE\n      </button>\n    </div>\n  );\n};\n\nexport default ProductList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}