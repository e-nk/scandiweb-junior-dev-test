{"ast":null,"code":"var _jsxFileName = \"/home/enock/Development/code/scandiweb-junior-dev-test/client/src/components/ProductList/ProductList.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import ProductCard from '../ProductCard/ProductCard';\n\n// const ProductList = () => {\n//   const [products, setProducts] = useState([]);\n//   const [selectedProducts, setSelectedProducts] = useState([]);\n\n//   useEffect(() => {\n//     // Fetch products from the API endpoint\n//     fetchProducts();\n//   }, []);\n\n//   const fetchProducts = async () => {\n//     try {\n//       const response = await fetch('http://localhost');\n//       const data = await response.json();\n//       setProducts(data);\n//     } catch (error) {\n//       console.error('Error fetching products:', error);\n//     }\n//   };\n\n//   const handleCheckboxChange = (productId) => {\n//     setSelectedProducts((prevSelected) => {\n//       if (prevSelected.includes(productId)) {\n//         return prevSelected.filter((id) => id !== productId);\n//       } else {\n//         return [...prevSelected, productId];\n//       }\n//     });\n//   };\n\n//   const handleDelete = (productId) => {\n//     // Perform the delete operation using the API endpoint or any other logic\n//     console.log('Deleting product with ID:', productId);\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <div className=\"row\">\n//         {products.map((product) => (\n//           <div className=\"col-md-3\" key={product.id}>\n//             <ProductCard\n//               product={product}\n//               isSelected={selectedProducts.includes(product.id)}\n//               onCheckboxChange={() => handleCheckboxChange(product.id)}\n//               onDelete={() => handleDelete(product.id)}\n//             />\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default ProductList;\n\n// import React, { useState, useEffect } from 'react';\n// import ProductCard from '../ProductCard/ProductCard';\n\n// const ProductList = ({ selectedProducts, setSelectedProducts }) => {\n//   const [products, setProducts] = useState([]);\n//   // const [selectedProducts, setSelectedProducts] = useState([]);\n\n//   useEffect(() => {\n//     // Fetch products from the API endpoint\n//     fetchProducts();\n//   }, []);\n\n//   const fetchProducts = async () => {\n//     try {\n//       const response = await fetch('http://localhost');\n//       const data = await response.json();\n//       setProducts(data);\n//     } catch (error) {\n//       console.error('Error fetching products:', error);\n//     }\n//   };\n\n//   const handleCheckboxChange = (productId) => {\n//     setSelectedProducts((prevSelected) => {\n//       if (prevSelected.includes(productId)) {\n//         return prevSelected.filter((id) => id !== productId);\n//       } else {\n//         return [...prevSelected, productId];\n//       }\n//     });\n//   };\n\n//   const handleMassDelete = () => {\n//     // Perform the mass delete operation using the API endpoint or any other logic\n//     console.log('Deleting selected products:', selectedProducts);\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <div className=\"row\">\n//         {products.map((product) => (\n//           <div className=\"col-md-3\" key={product.id}>\n//             <ProductCard\n//               product={product}\n//               isSelected={selectedProducts.includes(product.id)}\n//               onCheckboxChange={() => handleCheckboxChange(product.id)}\n//             />\n//           </div>\n//         ))}\n//       </div>\n//       {selectedProducts.length > 0 && (\n//         <div className=\"text-center\">\n//           <button className=\"btn btn-danger\" onClick={handleMassDelete}>\n//             Delete Selected Products\n//           </button>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default ProductList;\n\nimport React, { useState, useEffect } from 'react';\nimport ProductCard from '../ProductCard/ProductCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductList = _ref => {\n  _s();\n  let {\n    selectedProducts = [],\n    setSelectedProducts\n  } = _ref;\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    // Fetch products from the API endpoint\n    fetchProducts();\n  }, []);\n  const fetchProducts = async () => {\n    try {\n      const response = await fetch('http://localhost');\n      const data = await response.json();\n      setProducts(data);\n    } catch (error) {\n      console.error('Error fetching products:', error);\n    }\n  };\n  const handleCheckboxChange = productId => {\n    setSelectedProducts(prevSelected => {\n      if (prevSelected.includes(productId)) {\n        return prevSelected.filter(id => id !== productId);\n      } else {\n        return [...prevSelected, productId];\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: products.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-3\",\n        children: /*#__PURE__*/_jsxDEV(ProductCard, {\n          product: product,\n          isSelected: selectedProducts.includes(product.id),\n          onCheckboxChange: () => handleCheckboxChange(product.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this)\n      }, product.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductList, \"f86L6rLANGURv6GE6gupp7+oOp4=\");\n_c = ProductList;\nexport default ProductList;\nvar _c;\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"names":["React","useState","useEffect","ProductCard","jsxDEV","_jsxDEV","ProductList","_ref","_s","selectedProducts","setSelectedProducts","products","setProducts","fetchProducts","response","fetch","data","json","error","console","handleCheckboxChange","productId","prevSelected","includes","filter","id","className","children","map","product","isSelected","onCheckboxChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/enock/Development/code/scandiweb-junior-dev-test/client/src/components/ProductList/ProductList.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import ProductCard from '../ProductCard/ProductCard';\n\n// const ProductList = () => {\n//   const [products, setProducts] = useState([]);\n//   const [selectedProducts, setSelectedProducts] = useState([]);\n\n//   useEffect(() => {\n//     // Fetch products from the API endpoint\n//     fetchProducts();\n//   }, []);\n\n//   const fetchProducts = async () => {\n//     try {\n//       const response = await fetch('http://localhost');\n//       const data = await response.json();\n//       setProducts(data);\n//     } catch (error) {\n//       console.error('Error fetching products:', error);\n//     }\n//   };\n\n//   const handleCheckboxChange = (productId) => {\n//     setSelectedProducts((prevSelected) => {\n//       if (prevSelected.includes(productId)) {\n//         return prevSelected.filter((id) => id !== productId);\n//       } else {\n//         return [...prevSelected, productId];\n//       }\n//     });\n//   };\n\n//   const handleDelete = (productId) => {\n//     // Perform the delete operation using the API endpoint or any other logic\n//     console.log('Deleting product with ID:', productId);\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <div className=\"row\">\n//         {products.map((product) => (\n//           <div className=\"col-md-3\" key={product.id}>\n//             <ProductCard\n//               product={product}\n//               isSelected={selectedProducts.includes(product.id)}\n//               onCheckboxChange={() => handleCheckboxChange(product.id)}\n//               onDelete={() => handleDelete(product.id)}\n//             />\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default ProductList;\n\n\n// import React, { useState, useEffect } from 'react';\n// import ProductCard from '../ProductCard/ProductCard';\n\n// const ProductList = ({ selectedProducts, setSelectedProducts }) => {\n//   const [products, setProducts] = useState([]);\n//   // const [selectedProducts, setSelectedProducts] = useState([]);\n\n//   useEffect(() => {\n//     // Fetch products from the API endpoint\n//     fetchProducts();\n//   }, []);\n\n//   const fetchProducts = async () => {\n//     try {\n//       const response = await fetch('http://localhost');\n//       const data = await response.json();\n//       setProducts(data);\n//     } catch (error) {\n//       console.error('Error fetching products:', error);\n//     }\n//   };\n\n//   const handleCheckboxChange = (productId) => {\n//     setSelectedProducts((prevSelected) => {\n//       if (prevSelected.includes(productId)) {\n//         return prevSelected.filter((id) => id !== productId);\n//       } else {\n//         return [...prevSelected, productId];\n//       }\n//     });\n//   };\n  \n\n//   const handleMassDelete = () => {\n//     // Perform the mass delete operation using the API endpoint or any other logic\n//     console.log('Deleting selected products:', selectedProducts);\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <div className=\"row\">\n//         {products.map((product) => (\n//           <div className=\"col-md-3\" key={product.id}>\n//             <ProductCard\n//               product={product}\n//               isSelected={selectedProducts.includes(product.id)}\n//               onCheckboxChange={() => handleCheckboxChange(product.id)}\n//             />\n//           </div>\n//         ))}\n//       </div>\n//       {selectedProducts.length > 0 && (\n//         <div className=\"text-center\">\n//           <button className=\"btn btn-danger\" onClick={handleMassDelete}>\n//             Delete Selected Products\n//           </button>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default ProductList;\n\n\nimport React, { useState, useEffect } from 'react';\nimport ProductCard from '../ProductCard/ProductCard';\n\nconst ProductList = ({ selectedProducts =[], setSelectedProducts }) => {\n  const [products, setProducts] = useState([]);\n\n  useEffect(() => {\n    // Fetch products from the API endpoint\n    fetchProducts();\n  }, []);\n\n  const fetchProducts = async () => {\n    try {\n      const response = await fetch('http://localhost');\n      const data = await response.json();\n      setProducts(data);\n    } catch (error) {\n      console.error('Error fetching products:', error);\n    }\n  };\n\n  const handleCheckboxChange = (productId) => {\n    setSelectedProducts((prevSelected) => {\n      if (prevSelected.includes(productId)) {\n        return prevSelected.filter((id) => id !== productId);\n      } else {\n        return [...prevSelected, productId];\n      }\n    });\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        {products.map((product) => (\n          <div className=\"col-md-3\" key={product.id}>\n            <ProductCard\n              product={product}\n              isSelected={selectedProducts.includes(product.id)}\n              onCheckboxChange={() => handleCheckboxChange(product.id)}\n            />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ProductList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}