{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import ProductCard from '../ProductCard/ProductCard';\n\n// const ProductList = () => {\n//   const [products, setProducts] = useState([]);\n//   const [selectedProducts, setSelectedProducts] = useState([]);\n\n//   useEffect(() => {\n//     // Fetch products from the API endpoint\n//     fetchProducts();\n//   }, []);\n\n//   const fetchProducts = async () => {\n//     try {\n//       const response = await fetch('http://localhost');\n//       const data = await response.json();\n//       setProducts(data);\n//     } catch (error) {\n//       console.error('Error fetching products:', error);\n//     }\n//   };\n\n//   const handleCheckboxChange = (productId) => {\n//     setSelectedProducts((prevSelected) => {\n//       if (prevSelected.includes(productId)) {\n//         return prevSelected.filter((id) => id !== productId);\n//       } else {\n//         return [...prevSelected, productId];\n//       }\n//     });\n//   };\n\n//   const handleDelete = (productId) => {\n//     // Perform the delete operation using the API endpoint or any other logic\n//     console.log('Deleting product with ID:', productId);\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <div className=\"row\">\n//         {products.map((product) => (\n//           <div className=\"col-md-3\" key={product.id}>\n//             <ProductCard\n//               product={product}\n//               isSelected={selectedProducts.includes(product.id)}\n//               onCheckboxChange={() => handleCheckboxChange(product.id)}\n//               onDelete={() => handleDelete(product.id)}\n//             />\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default ProductList;\n\n// import React, { useState, useEffect } from 'react';\n// import ProductCard from '../ProductCard/ProductCard';\n\n// const ProductList = ({ selectedProducts, setSelectedProducts }) => {\n//   const [products, setProducts] = useState([]);\n//   // const [selectedProducts, setSelectedProducts] = useState([]);\n\n//   useEffect(() => {\n//     // Fetch products from the API endpoint\n//     fetchProducts();\n//   }, []);\n\n//   const fetchProducts = async () => {\n//     try {\n//       const response = await fetch('http://localhost');\n//       const data = await response.json();\n//       setProducts(data);\n//     } catch (error) {\n//       console.error('Error fetching products:', error);\n//     }\n//   };\n\n//   const handleCheckboxChange = (productId) => {\n//     setSelectedProducts((prevSelected) => {\n//       if (prevSelected.includes(productId)) {\n//         return prevSelected.filter((id) => id !== productId);\n//       } else {\n//         return [...prevSelected, productId];\n//       }\n//     });\n//   };\n\n//   const handleMassDelete = () => {\n//     // Perform the mass delete operation using the API endpoint or any other logic\n//     console.log('Deleting selected products:', selectedProducts);\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <div className=\"row\">\n//         {products.map((product) => (\n//           <div className=\"col-md-3\" key={product.id}>\n//             <ProductCard\n//               product={product}\n//               isSelected={selectedProducts.includes(product.id)}\n//               onCheckboxChange={() => handleCheckboxChange(product.id)}\n//             />\n//           </div>\n//         ))}\n//       </div>\n//       {selectedProducts.length > 0 && (\n//         <div className=\"text-center\">\n//           <button className=\"btn btn-danger\" onClick={handleMassDelete}>\n//             Delete Selected Products\n//           </button>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default ProductList;","map":{"version":3,"names":[],"sources":["/home/enock/Development/code/scandiweb-junior-dev-test/client/src/components/ProductList/ProductList.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import ProductCard from '../ProductCard/ProductCard';\n\n// const ProductList = () => {\n//   const [products, setProducts] = useState([]);\n//   const [selectedProducts, setSelectedProducts] = useState([]);\n\n//   useEffect(() => {\n//     // Fetch products from the API endpoint\n//     fetchProducts();\n//   }, []);\n\n//   const fetchProducts = async () => {\n//     try {\n//       const response = await fetch('http://localhost');\n//       const data = await response.json();\n//       setProducts(data);\n//     } catch (error) {\n//       console.error('Error fetching products:', error);\n//     }\n//   };\n\n//   const handleCheckboxChange = (productId) => {\n//     setSelectedProducts((prevSelected) => {\n//       if (prevSelected.includes(productId)) {\n//         return prevSelected.filter((id) => id !== productId);\n//       } else {\n//         return [...prevSelected, productId];\n//       }\n//     });\n//   };\n\n//   const handleDelete = (productId) => {\n//     // Perform the delete operation using the API endpoint or any other logic\n//     console.log('Deleting product with ID:', productId);\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <div className=\"row\">\n//         {products.map((product) => (\n//           <div className=\"col-md-3\" key={product.id}>\n//             <ProductCard\n//               product={product}\n//               isSelected={selectedProducts.includes(product.id)}\n//               onCheckboxChange={() => handleCheckboxChange(product.id)}\n//               onDelete={() => handleDelete(product.id)}\n//             />\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default ProductList;\n\n\n// import React, { useState, useEffect } from 'react';\n// import ProductCard from '../ProductCard/ProductCard';\n\n// const ProductList = ({ selectedProducts, setSelectedProducts }) => {\n//   const [products, setProducts] = useState([]);\n//   // const [selectedProducts, setSelectedProducts] = useState([]);\n\n//   useEffect(() => {\n//     // Fetch products from the API endpoint\n//     fetchProducts();\n//   }, []);\n\n//   const fetchProducts = async () => {\n//     try {\n//       const response = await fetch('http://localhost');\n//       const data = await response.json();\n//       setProducts(data);\n//     } catch (error) {\n//       console.error('Error fetching products:', error);\n//     }\n//   };\n\n//   const handleCheckboxChange = (productId) => {\n//     setSelectedProducts((prevSelected) => {\n//       if (prevSelected.includes(productId)) {\n//         return prevSelected.filter((id) => id !== productId);\n//       } else {\n//         return [...prevSelected, productId];\n//       }\n//     });\n//   };\n  \n\n//   const handleMassDelete = () => {\n//     // Perform the mass delete operation using the API endpoint or any other logic\n//     console.log('Deleting selected products:', selectedProducts);\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <div className=\"row\">\n//         {products.map((product) => (\n//           <div className=\"col-md-3\" key={product.id}>\n//             <ProductCard\n//               product={product}\n//               isSelected={selectedProducts.includes(product.id)}\n//               onCheckboxChange={() => handleCheckboxChange(product.id)}\n//             />\n//           </div>\n//         ))}\n//       </div>\n//       {selectedProducts.length > 0 && (\n//         <div className=\"text-center\">\n//           <button className=\"btn btn-danger\" onClick={handleMassDelete}>\n//             Delete Selected Products\n//           </button>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default ProductList;\n\n\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}